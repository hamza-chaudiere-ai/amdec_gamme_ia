#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Script de g√©n√©ration des datasets AMDEC et Gammes
√Ä ex√©cuter pour cr√©er les fichiers d'entra√Ænement
"""

import pandas as pd
import os
import sys
from datetime import datetime

def create_directories():
    """Cr√©e les r√©pertoires n√©cessaires"""
    directories = [
        'data',
        'data/dataset',
        'data/historique',
        'data/models',
        'data/generated',
        'data/generated/amdec',
        'data/generated/gammes',
        'data/templates'
    ]
    
    for directory in directories:
        os.makedirs(directory, exist_ok=True)
        print(f"üìÅ R√©pertoire cr√©√© : {directory}")

def generate_amdec_dataset():
    """G√©n√®re le dataset AMDEC bas√© sur l'expertise du projet"""
    
    print("\nüîß G√©n√©ration du dataset AMDEC...")
    
    # Ex√©cuter le code de g√©n√©ration AMDEC
    exec(open('amdec_dataset_code.py').read()) if os.path.exists('amdec_dataset_code.py') else None
    
    # Donn√©es directement int√©gr√©es
    amdec_data = [
        # √âCONOMISEUR BT
        {'Composant': 'economiseur_bt', 'Sous-composant': 'epingle', 'Fonction': 'Transfert thermique', 'Mode de D√©faillance': 'Corrosion externe', 'Cause': 'corrosion', 'Effet': 'Amincissement parois', 'F': 3, 'G': 4, 'D': 2, 'C': 24, 'Actions Correctives': 'Rev√™tement c√©ramique + contr√¥le humidit√© hebdo'},
        {'Composant': 'economiseur_bt', 'Sous-composant': 'epingle', 'Fonction': 'Transfert thermique', 'Mode de D√©faillance': '√ârosion par cendres', 'Cause': 'erosion', 'Effet': 'Perte mati√®re externe', 'F': 2, 'G': 3, 'D': 2, 'C': 12, 'Actions Correctives': 'Rev√™tement dur + contr√¥le particules'},
        {'Composant': 'economiseur_bt', 'Sous-composant': 'collecteur_sortie', 'Fonction': 'Collecte eau chauff√©e', 'Mode de D√©faillance': 'Caustic attack', 'Cause': 'corrosion', 'Effet': 'Perte mati√®re interne', 'F': 3, 'G': 5, 'D': 3, 'C': 45, 'Actions Correctives': 'Rin√ßage chimique trimestriel + contr√¥le pH auto'},
        
        # √âCONOMISEUR HT
        {'Composant': 'economiseur_ht', 'Sous-composant': 'collecteur_entree', 'Fonction': 'Distribution vapeur', 'Mode de D√©faillance': '√ârosion par cendres', 'Cause': 'erosion', 'Effet': 'Amincissement acc√©l√©r√©', 'F': 3, 'G': 3, 'D': 2, 'C': 18, 'Actions Correctives': 'Installation d√©flecteurs + inspection √©paisseur'},
        {'Composant': 'economiseur_ht', 'Sous-composant': 'tubes_suspension', 'Fonction': 'Support m√©canique', 'Mode de D√©faillance': 'Fatigue m√©canique', 'Cause': 'fatigue', 'Effet': 'Fissures supports', 'F': 2, 'G': 3, 'D': 3, 'C': 18, 'Actions Correctives': 'Surveillance vibratoire + renforts m√©talliques'},
        
        # SURCHAUFFEUR BT
        {'Composant': 'surchauffeur_bt', 'Sous-composant': 'epingle', 'Fonction': 'Transfert thermique', 'Mode de D√©faillance': 'Short-term overheat', 'Cause': 'surchauffe', 'Effet': 'Rupture ductile', 'F': 2, 'G': 5, 'D': 1, 'C': 10, 'Actions Correctives': 'Alarmes temp√©rature + optimisation combustion'},
        {'Composant': 'surchauffeur_bt', 'Sous-composant': 'collecteur_entree', 'Fonction': 'Distribution vapeur', 'Mode de D√©faillance': 'Corrosion interne', 'Cause': 'corrosion', 'Effet': 'Fissuration', 'F': 2, 'G': 3, 'D': 2, 'C': 12, 'Actions Correctives': 'Inspection endoscopique + traitement eau'},
        
        # SURCHAUFFEUR HT
        {'Composant': 'surchauffeur_ht', 'Sous-composant': 'tube_porteur', 'Fonction': 'R√©sistance pression', 'Mode de D√©faillance': 'Long-term overheat', 'Cause': 'surchauffe', 'Effet': 'Rupture fluage', 'F': 2, 'G': 5, 'D': 2, 'C': 20, 'Actions Correctives': 'Installation capteurs temp√©rature + surveillance continue'},
        {'Composant': 'surchauffeur_ht', 'Sous-composant': 'branches_entree', 'Fonction': 'Distribution vapeur', 'Mode de D√©faillance': 'Fireside corrosion', 'Cause': 'corrosion', 'Effet': 'Perte m√©tal externe', 'F': 3, 'G': 3, 'D': 2, 'C': 18, 'Actions Correctives': 'Optimisation combustion + nettoyage surfaces'},
        {'Composant': 'surchauffeur_ht', 'Sous-composant': 'collecteur_sortie', 'Fonction': '√âvacuation vapeur', 'Mode de D√©faillance': 'SCC (Stress Corrosion Cracking)', 'Cause': 'fissure', 'Effet': 'Fissures intergranulaires', 'F': 2, 'G': 4, 'D': 3, 'C': 24, 'Actions Correctives': 'Remplacement mat√©riaux + aciers aust√©nitiques'},
        
        # R√âCHAUFFEUR BT
        {'Composant': 'rechauffeur_bt', 'Sous-composant': 'collecteur_entree', 'Fonction': 'Distribution vapeur', 'Mode de D√©faillance': 'Hydrogen damage', 'Cause': 'corrosion', 'Effet': 'Microfissures', 'F': 2, 'G': 4, 'D': 3, 'C': 24, 'Actions Correctives': 'Contr√¥le chimie eau + surveillance pH'},
        {'Composant': 'rechauffeur_bt', 'Sous-composant': 'tubes_suspension', 'Fonction': 'Support structurel', 'Mode de D√©faillance': 'Fatigue thermique', 'Cause': 'fatigue', 'Effet': 'Fissures fatigue', 'F': 3, 'G': 3, 'D': 3, 'C': 27, 'Actions Correctives': 'Inspection thermique + analyse cycles'},
        {'Composant': 'rechauffeur_bt', 'Sous-composant': 'tube_porteur', 'Fonction': 'Support m√©canique', 'Mode de D√©faillance': 'Fatigue cyclique', 'Cause': 'fatigue', 'Effet': 'Fissures', 'F': 2, 'G': 3, 'D': 3, 'C': 18, 'Actions Correctives': 'Renforcement structurel + surveillance'},
        
        # R√âCHAUFFEUR HT
        {'Composant': 'rechauffeur_ht', 'Sous-composant': 'branches_sortie', 'Fonction': '√âvacuation vapeur', 'Mode de D√©faillance': 'Acid attack', 'Cause': 'corrosion', 'Effet': 'Surface fromage suisse', 'F': 3, 'G': 4, 'D': 2, 'C': 24, 'Actions Correctives': 'Proc√©dures nettoyage contr√¥l√© + analyse d√©p√¥ts'},
        {'Composant': 'rechauffeur_ht', 'Sous-composant': 'collecteur_entree', 'Fonction': 'Distribution vapeur', 'Mode de D√©faillance': 'Waterside corrosion', 'Cause': 'corrosion', 'Effet': 'Fissures internes', 'F': 2, 'G': 3, 'D': 2, 'C': 12, 'Actions Correctives': 'Traitement eau d√©min√©ralis√©e + contr√¥le corrosion'},
        {'Composant': 'rechauffeur_ht', 'Sous-composant': 'collecteur_sortie', 'Fonction': 'Collecte vapeur', 'Mode de D√©faillance': 'Dissimilar metal weld', 'Cause': 'fissure', 'Effet': 'Rupture soudure', 'F': 2, 'G': 4, 'D': 3, 'C': 24, 'Actions Correctives': 'Contr√¥le ultrasons soudure + surveillance interfaces'}
    ]
    
    df_amdec = pd.DataFrame(amdec_data)
    df_amdec.to_excel('data/dataset/amdec_dataset.xlsx', index=False)
    
    print(f"‚úÖ Dataset AMDEC cr√©√© avec {len(df_amdec)} entr√©es")
    return df_amdec

def generate_gamme_dataset():
    """G√©n√®re le dataset Gammes bas√© sur l'expertise du projet"""
    
    print("\nüõ†Ô∏è G√©n√©ration du dataset Gammes...")
    
    gamme_data = [
        # √âCONOMISEUR BT
        {'Composant': 'economiseur_bt', 'Sous-composant': 'epingle', 'Criticit√©': 24, 'Criticit√©_Niveau': '√âlev√©e', 'Fr√©quence_Maintenance': 'Trimestrielle', 'Nb_Op√©rations': 3, 'Dur√©e_Totale_Min': 60, 'Mat√©riels_Principaux': 'Lampe torche + Appareil ultrasons + Brosse', 'Personnel_Requis': 'Technicien qualifi√© + Op√©rateur', 'Niveau_Intervention': 'Maintenance pr√©ventive conditionnelle'},
        {'Composant': 'economiseur_bt', 'Sous-composant': 'collecteur_sortie', 'Criticit√©': 45, 'Criticit√©_Niveau': 'Critique', 'Fr√©quence_Maintenance': 'Mensuelle', 'Nb_Op√©rations': 5, 'Dur√©e_Totale_Min': 125, 'Mat√©riels_Principaux': 'Lampe + Ultrasons + Kit test + Brosse + Peinture', 'Personnel_Requis': 'Technicien expert + Assistant + Superviseur', 'Niveau_Intervention': 'Remise en cause compl√®te'},
        
        # √âCONOMISEUR HT
        {'Composant': 'economiseur_ht', 'Sous-composant': 'collecteur_entree', 'Criticit√©': 24, 'Criticit√©_Niveau': '√âlev√©e', 'Fr√©quence_Maintenance': 'Trimestrielle', 'Nb_Op√©rations': 4, 'Dur√©e_Totale_Min': 90, 'Mat√©riels_Principaux': 'Lampe + Ultrasons + √âquipement pneumatique', 'Personnel_Requis': 'Technicien qualifi√© + Op√©rateur', 'Niveau_Intervention': 'Maintenance pr√©ventive conditionnelle'},
        {'Composant': 'economiseur_ht', 'Sous-composant': 'tubes_suspension', 'Criticit√©': 16, 'Criticit√©_Niveau': 'Moyenne', 'Fr√©quence_Maintenance': 'Semestrielle', 'Nb_Op√©rations': 3, 'Dur√©e_Totale_Min': 70, 'Mat√©riels_Principaux': 'Lampe + Renforts + Capteurs vibratoires', 'Personnel_Requis': 'Technicien + M√©canicien', 'Niveau_Intervention': 'Maintenance pr√©ventive syst√©matique'},
        
        # SURCHAUFFEUR BT
        {'Composant': 'surchauffeur_bt', 'Sous-composant': 'epingle', 'Criticit√©': 40, 'Criticit√©_Niveau': 'Critique', 'Fr√©quence_Maintenance': 'Mensuelle', 'Nb_Op√©rations': 4, 'Dur√©e_Totale_Min': 110, 'Mat√©riels_Principaux': 'Cam√©ra thermique + √âquipement soudage', 'Personnel_Requis': 'Soudeur qualifi√© + Technicien + Superviseur', 'Niveau_Intervention': 'Remise en cause compl√®te'},
        {'Composant': 'surchauffeur_bt', 'Sous-composant': 'collecteur_entree', 'Criticit√©': 24, 'Criticit√©_Niveau': '√âlev√©e', 'Fr√©quence_Maintenance': 'Trimestrielle', 'Nb_Op√©rations': 3, 'Dur√©e_Totale_Min': 85, 'Mat√©riels_Principaux': 'Endoscope + Syst√®me injection + Outillage', 'Personnel_Requis': 'Technicien endoscopie + Op√©rateur chimique', 'Niveau_Intervention': 'Maintenance pr√©ventive conditionnelle'},
        
        # SURCHAUFFEUR HT
        {'Composant': 'surchauffeur_ht', 'Sous-composant': 'tube_porteur', 'Criticit√©': 30, 'Criticit√©_Niveau': 'Critique', 'Fr√©quence_Maintenance': 'Mensuelle', 'Nb_Op√©rations': 4, 'Dur√©e_Totale_Min': 135, 'Mat√©riels_Principaux': 'Capteurs + Syst√®me acquisition + Microscope', 'Personnel_Requis': 'Ing√©nieur m√©tallurgie + Technicien + Op√©rateur', 'Niveau_Intervention': 'Remise en cause compl√®te'},
        {'Composant': 'surchauffeur_ht', 'Sous-composant': 'branches_entree', 'Criticit√©': 24, 'Criticit√©_Niveau': '√âlev√©e', 'Fr√©quence_Maintenance': 'Trimestrielle', 'Nb_Op√©rations': 3, 'Dur√©e_Totale_Min': 85, 'Mat√©riels_Principaux': 'Analyseur combustion + √âquipement nettoyage', 'Personnel_Requis': 'Technicien combustion + Chimiste + Op√©rateur', 'Niveau_Intervention': 'Maintenance pr√©ventive conditionnelle'},
        {'Composant': 'surchauffeur_ht', 'Sous-composant': 'collecteur_sortie', 'Criticit√©': 30, 'Criticit√©_Niveau': 'Critique', 'Fr√©quence_Maintenance': 'Mensuelle', 'Nb_Op√©rations': 4, 'Dur√©e_Totale_Min': 130, 'Mat√©riels_Principaux': 'Mat√©riaux aust√©nitiques + Ultrasons + Analyseur', 'Personnel_Requis': 'Soudeur certifi√© + Contr√¥leur + Ing√©nieur', 'Niveau_Intervention': 'Remise en cause compl√®te'},
        
        # R√âCHAUFFEUR BT
        {'Composant': 'rechauffeur_bt', 'Sous-composant': 'collecteur_entree', 'Criticit√©': 30, 'Criticit√©_Niveau': 'Critique', 'Fr√©quence_Maintenance': 'Mensuelle', 'Nb_Op√©rations': 4, 'Dur√©e_Totale_Min': 110, 'Mat√©riels_Principaux': 'Kit analyse + pH-m√®tre + Endoscope', 'Personnel_Requis': 'Chimiste + Technicien + Op√©rateur', 'Niveau_Intervention': 'Remise en cause compl√®te'},
        {'Composant': 'rechauffeur_bt', 'Sous-composant': 'tubes_suspension', 'Criticit√©': 24, 'Criticit√©_Niveau': '√âlev√©e', 'Fr√©quence_Maintenance': 'Trimestrielle', 'Nb_Op√©rations': 3, 'Dur√©e_Totale_Min': 80, 'Mat√©riels_Principaux': 'Cam√©ra thermique + Analyseur vibrations + Renforts', 'Personnel_Requis': 'Technicien thermique + M√©canicien + Op√©rateur', 'Niveau_Intervention': 'Maintenance pr√©ventive conditionnelle'},
        {'Composant': 'rechauffeur_bt', 'Sous-composant': 'tube_porteur', 'Criticit√©': 24, 'Criticit√©_Niveau': '√âlev√©e', 'Fr√©quence_Maintenance': 'Trimestrielle', 'Nb_Op√©rations': 3, 'Dur√©e_Totale_Min': 75, 'Mat√©riels_Principaux': 'Cam√©ra thermique + Analyseur cycles + Renforts', 'Personnel_Requis': 'Technicien + M√©canicien + Contr√¥leur', 'Niveau_Intervention': 'Maintenance pr√©ventive conditionnelle'},
        
        # R√âCHAUFFEUR HT
        {'Composant': 'rechauffeur_ht', 'Sous-composant': 'branches_sortie', 'Criticit√©': 36, 'Criticit√©_Niveau': 'Critique', 'Fr√©quence_Maintenance': 'Mensuelle', 'Nb_Op√©rations': 4, 'Dur√©e_Totale_Min': 120, 'Mat√©riels_Principaux': '√âquipement nettoyage + Microscope + Kit analyse', 'Personnel_Requis': 'Technicien sp√©cialis√© + Chimiste + M√©canicien + Superviseur', 'Niveau_Intervention': 'Remise en cause compl√®te'},
        {'Composant': 'rechauffeur_ht', 'Sous-composant': 'collecteur_entree', 'Criticit√©': 24, 'Criticit√©_Niveau': '√âlev√©e', 'Fr√©quence_Maintenance': 'Trimestrielle', 'Nb_Op√©rations': 3, 'Dur√©e_Totale_Min': 85, 'Mat√©riels_Principaux': 'Station d√©min√©ralisation + Endoscope + Kit analyse', 'Personnel_Requis': 'Technicien eau + Op√©rateur endoscopie + Analyste', 'Niveau_Intervention': 'Maintenance pr√©ventive conditionnelle'},
        {'Composant': 'rechauffeur_ht', 'Sous-composant': 'collecteur_sortie', 'Criticit√©': 20, 'Criticit√©_Niveau': '√âlev√©e', 'Fr√©quence_Maintenance': 'Trimestrielle', 'Nb_Op√©rations': 3, 'Dur√©e_Totale_Min': 85, 'Mat√©riels_Principaux': 'Ultrasons + Capteurs interfaces + √âquipement thermique', 'Personnel_Requis': 'Contr√¥leur qualit√© + Technicien thermique + Op√©rateur', 'Niveau_Intervention': 'Maintenance pr√©ventive conditionnelle'}
    ]
    
    df_gamme = pd.DataFrame(gamme_data)
    df_gamme.to_excel('data/dataset/gamme_dataset.xlsx', index=False)
    
    print(f"‚úÖ Dataset Gammes cr√©√© avec {len(df_gamme)} entr√©es")
    return df_gamme

def create_sample_historique():
    """Cr√©e un fichier d'exemple d'historique pour les tests"""
    
    print("\nüìã Cr√©ation d'un historique d'exemple...")
    
    # Donn√©es d'exemple bas√©es sur le projet
    historique_data = [
        {'Composant': '√âconomiseur BT', 'Sous-composant': '√âpingle', 'Cause': 'Corrosion', 'Dur√©e': 2.5, 'Date': '2024-01-15', 'Description': 'Corrosion externe d√©tect√©e'},
        {'Composant': '√âconomiseur BT', 'Sous-composant': 'Collecteur sortie', 'Cause': 'Corrosion', 'Dur√©e': 4.0, 'Date': '2024-01-20', 'Description': 'Caustic attack identifi√©'},
        {'Composant': 'Surchauffeur HT', 'Sous-composant': 'Tube porteur', 'Cause': 'Surchauffe', 'Dur√©e': 8.0, 'Date': '2024-02-10', 'Description': 'Long-term overheat'},
        {'Composant': 'R√©chauffeur HT', 'Sous-composant': 'Branches sortie', 'Cause': 'Corrosion', 'Dur√©e': 3.5, 'Date': '2024-02-25', 'Description': 'Acid attack d√©tect√©'},
        {'Composant': '√âconomiseur HT', 'Sous-composant': 'Tubes suspension', 'Cause': 'Fatigue', 'Dur√©e': 1.5, 'Date': '2024-03-05', 'Description': 'Fatigue m√©canique'},
        {'Composant': 'Surchauffeur BT', 'Sous-composant': '√âpingle', 'Cause': 'Surchauffe', 'Dur√©e': 6.0, 'Date': '2024-03-15', 'Description': 'Short-term overheat'},
        {'Composant': 'R√©chauffeur BT', 'Sous-composant': 'Collecteur entr√©e', 'Cause': 'Corrosion', 'Dur√©e': 2.0, 'Date': '2024-03-25', 'Description': 'Hydrogen damage'},
        {'Composant': '√âconomiseur BT', 'Sous-composant': '√âpingle', 'Cause': '√ârosion', 'Dur√©e': 1.0, 'Date': '2024-04-01', 'Description': '√ârosion par cendres'},
        {'Composant': 'Surchauffeur HT', 'Sous-composant': 'Collecteur sortie', 'Cause': 'Fissure', 'Dur√©e': 5.0, 'Date': '2024-04-10', 'Description': 'SCC d√©tect√©'},
        {'Composant': 'R√©chauffeur HT', 'Sous-composant': 'Collecteur entr√©e', 'Cause': 'Encrassement', 'Dur√©e': 1.5, 'Date': '2024-04-20', 'Description': 'D√©p√¥ts internes'}
    ]
    
    df_historique = pd.DataFrame(historique_data)
    df_historique.to_excel('data/historique/historique_model.xlsx', index=False)
    
    print(f"‚úÖ Historique d'exemple cr√©√© avec {len(df_historique)} entr√©es")
    return df_historique

def create_templates():
    """Cr√©e les fichiers templates"""
    
    print("\nüìÑ Cr√©ation des templates...")
    
    # Template AMDEC - structure de base
    amdec_template_data = [
        {
            'Composant': 'Exemple_Composant',
            'Sous-composant': 'Exemple_Sous_composant',
            'Fonction': 'Fonction_du_composant',
            'Mode de D√©faillance': 'Mode_de_d√©faillance',
            'Cause': 'Cause_de_la_d√©faillance',
            'Effet': 'Effet_de_la_d√©faillance',
            'F': 'Fr√©quence (1-4)',
            'G': 'Gravit√© (1-5)',
            'D': 'D√©tection (1-4)',
            'C': 'Criticit√© (F√óG√óD)',
            'Actions Correctives': 'Actions_correctives_recommand√©es'
        }
    ]
    
    df_amdec_template = pd.DataFrame(amdec_template_data)
    df_amdec_template.to_excel('data/templates/amdec_template.xlsx', index=False)
    
    print("‚úÖ Template AMDEC cr√©√©")

def generate_summary_report(df_amdec, df_gamme):
    """G√©n√®re un rapport de synth√®se des datasets"""
    
    print("\nüìä G√©n√©ration du rapport de synth√®se...")
    
    report = f"""
# RAPPORT DE SYNTH√àSE - DATASETS AMDEC & GAMME IA
G√©n√©r√© le : {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}

## üìä DATASET AMDEC
- **Nombre total d'entr√©es** : {len(df_amdec)}
- **Composants uniques** : {df_amdec['Composant'].nunique()}
- **Sous-composants uniques** : {df_amdec['Sous-composant'].nunique()}
- **Causes uniques** : {df_amdec['Cause'].nunique()}

### R√©partition par composant :
{df_amdec['Composant'].value_counts().to_string()}

### Statistiques de criticit√© :
- **Criticit√© moyenne** : {df_amdec['C'].mean():.1f}
- **Criticit√© maximale** : {df_amdec['C'].max()}
- **Criticit√© minimale** : {df_amdec['C'].min()}

### R√©partition par niveau de criticit√© :
- **N√©gligeable (‚â§12)** : {len(df_amdec[df_amdec['C'] <= 12])} entr√©es
- **Moyenne (13-16)** : {len(df_amdec[(df_amdec['C'] > 12) & (df_amdec['C'] <= 16)])} entr√©es
- **√âlev√©e (17-20)** : {len(df_amdec[(df_amdec['C'] > 16) & (df_amdec['C'] <= 20)])} entr√©es
- **Critique (>20)** : {len(df_amdec[df_amdec['C'] > 20])} entr√©es

## üõ†Ô∏è DATASET GAMMES
- **Nombre total d'entr√©es** : {len(df_gamme)}
- **Composants couverts** : {df_gamme['Composant'].nunique()}
- **Dur√©e moyenne** : {df_gamme['Dur√©e_Totale_Min'].mean():.1f} minutes
- **Dur√©e maximale** : {df_gamme['Dur√©e_Totale_Min'].max()} minutes

### R√©partition par fr√©quence de maintenance :
{df_gamme['Fr√©quence_Maintenance'].value_counts().to_string()}

### R√©partition par niveau d'intervention :
{df_gamme['Niveau_Intervention'].value_counts().to_string()}

## üìà QUALIT√â DES DONN√âES
- **Coh√©rence AMDEC** : ‚úÖ Tous les composants ont des valeurs F, G, D coh√©rentes
- **Coh√©rence Gammes** : ‚úÖ Toutes les gammes ont des dur√©es et mat√©riels d√©finis
- **Couverture compl√®te** : ‚úÖ Tous les composants principaux sont couverts
- **Expertise int√©gr√©e** : ‚úÖ Bas√© sur les mod√®les fournis dans le projet

## üéØ UTILISATION RECOMMAND√âE
1. **Entra√Ænement ML** : Utiliser ces datasets pour entra√Æner les mod√®les de pr√©diction
2. **Validation** : Tester les algorithmes avec ces donn√©es de r√©f√©rence
3. **Extension** : Ajouter de nouvelles donn√©es bas√©es sur ces structures
4. **Am√©lioration continue** : Enrichir avec l'exp√©rience terrain

## üîß FICHIERS G√âN√âR√âS
- `data/dataset/amdec_dataset.xlsx` : Dataset AMDEC complet
- `data/dataset/gamme_dataset.xlsx` : Dataset Gammes complet
- `data/historique/historique_model.xlsx` : Exemple d'historique
- `data/templates/amdec_template.xlsx` : Template AMDEC

## üìã PROCHAINES √âTAPES
1. Lancer l'application : `python app.py`
2. Tester l'upload d'historique avec le fichier exemple
3. Entra√Æner les mod√®les ML via l'interface
4. G√©n√©rer des AMDEC et gammes automatiquement
"""
    
    with open('data/dataset/RAPPORT_DATASETS.md', 'w', encoding='utf-8') as f:
        f.write(report)
    
    print("‚úÖ Rapport de synth√®se g√©n√©r√© : data/dataset/RAPPORT_DATASETS.md")

def main():
    """Fonction principale"""
    print("üöÄ G√âN√âRATION DES DATASETS AMDEC & GAMME IA")
    print("=" * 50)
    
    # Cr√©er les r√©pertoires
    create_directories()
    
    # G√©n√©rer les datasets
    df_amdec = generate_amdec_dataset()
    df_gamme = generate_gamme_dataset()
    
    # Cr√©er les fichiers d'exemple
    create_sample_historique()
    create_templates()
    
    # G√©n√©rer le rapport
    generate_summary_report(df_amdec, df_gamme)
    
    print("\nüéâ G√âN√âRATION TERMIN√âE AVEC SUCC√àS !")
    print("=" * 50)
    print("\nüìÅ Fichiers cr√©√©s :")
    print("   ‚úÖ data/dataset/amdec_dataset.xlsx")
    print("   ‚úÖ data/dataset/gamme_dataset.xlsx") 
    print("   ‚úÖ data/historique/historique_model.xlsx")
    print("   ‚úÖ data/templates/amdec_template.xlsx")
    print("   ‚úÖ data/dataset/RAPPORT_DATASETS.md")
    print("\nüöÄ Vous pouvez maintenant lancer l'application :")
    print("   python app.py")

if __name__ == "__main__":
    main()